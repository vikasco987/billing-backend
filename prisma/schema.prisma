generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// ===================== ENUMS =====================

enum Role {
  USER
  user
  ADMIN
  admin
  SELLER
  seller
}

enum FieldType {
  INPUT
  SELECT
  CHECKBOX
  RADIO
  FILE
}

// ===================== USER =====================

model User {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  name     String
  email    String   @unique
  clerkId  String   @unique          // Clerk userId
  role     Role     @default(USER)

  bills    Bill[]
  items    Item[]
  forms    Form[]
  profiles BusinessProfile[]   // ✅ One user can have many business profiles
}

// ===================== BILLING & E-COMMERCE MODELS =====================

model Product {
  id    String      @id @default(auto()) @map("_id") @db.ObjectId
  name  String
  price Float
  bills BillProduct[]
}

model Bill {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  userId    String      @db.ObjectId
  user      User        @relation(fields: [userId], references: [id])
  products  BillProduct[]
  total     Float
  createdAt DateTime    @default(now())
}

model BillProduct {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  billId    String @db.ObjectId
  productId String @db.ObjectId
  bill      Bill    @relation(fields: [billId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
}

model Category {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  parentId  String?    @db.ObjectId
  parent    Category?  @relation("Subcategories", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  children  Category[] @relation("Subcategories")
  items     Item[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

// ===================== ITEM MODEL =====================

model Item {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  description   String?

  // Pricing
  price         Float?
  mrp           Float?
  purchasePrice Float?
  sellingPrice  Float?
  gst           Float?
  discount      Float?

  // Inventory
  stock         Int?
  openingStock  Int?
  currentStock  Int?
  reorderLevel  Int?
  unit          String?
  barcode       String?

  // Product details
  brand         String?
  model         String?
  size          String?
  color         String?
  variants      Json?

  // Images
  imageUrl      String?  @map("image")
  gallery       String[]

  // Relations
  categoryId    String   @db.ObjectId
  category      Category @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  userId        String
  user          User     @relation(fields: [userId], references: [clerkId])

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

// ===================== DYNAMIC FORM MODELS =====================

model Form {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  fields    Field[]

  userId    String
  user      User     @relation(fields: [userId], references: [clerkId])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Field {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  formId    String   @db.ObjectId
  form      Form     @relation(fields: [formId], references: [id])

  label     String
  type      FieldType
  required  Boolean  @default(false)
  options   String[]
  value     String?
  values    String[]
  fileUrl   String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// ===================== BUSINESS PROFILE MODEL =====================

model BusinessProfile {
  id                 String   @id @default(auto()) @map("_id") @db.ObjectId
  userId             String
  user               User     @relation(fields: [userId], references: [clerkId])

  businessType       String?
  businessName       String?
  businessTagLine    String?
  contactPersonName  String?
  contactPersonPhone String?
  contactPersonEmail String?

  upi                String?
  googleReviewUrl    String?

  profileImageUrl    String?   // ✅ Main profile picture
  logoUrl            String?   // ✅ Business Logo
  signatureUrl       String?   // ✅ Business Signature

  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}
