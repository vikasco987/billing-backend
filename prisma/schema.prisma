generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// ===================== MODELS =====================

model User {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  name  String
  email String @unique
  bills Bill[]
}

model Product {
  id    String        @id @default(auto()) @map("_id") @db.ObjectId
  name  String
  price Float
  bills BillProduct[] // ðŸ‘ˆ opposite side of relation
}

model Bill {
  id        String        @id @default(auto()) @map("_id") @db.ObjectId
  userId    String        @db.ObjectId
  user      User          @relation(fields: [userId], references: [id])
  products  BillProduct[]
  total     Float
  createdAt DateTime      @default(now())
}

model BillProduct {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  billId    String @db.ObjectId
  productId String @db.ObjectId

  bill    Bill    @relation(fields: [billId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  quantity Int
}

// âœ… Fixed self relation for Category
model Category {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  parentId  String?    @db.ObjectId
  parent    Category?  @relation("Subcategories", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  children  Category[] @relation("Subcategories")
  items     Item[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

// âœ… Updated Item model: `imageUrl` in code, mapped to `image` in DB
model Item {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  price       Float
  tax         Float?
  discount    Float?
  stock       Int?     // optional for shops
  variants    Json?    // small/large, toppings etc.
  categoryId  String   @db.ObjectId
  category    Category @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  imageUrl    String?  @map("image") // ðŸ‘ˆ changed from image to imageUrl
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
