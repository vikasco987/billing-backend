generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// ===================== BILLING & E-COMMERCE MODELS =====================

model User {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  name  String
  email String @unique
  bills Bill[]
}

model Product {
  id    String      @id @default(auto()) @map("_id") @db.ObjectId
  name  String
  price Float
  bills BillProduct[]
}

model Bill {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  userId    String      @db.ObjectId
  user      User        @relation(fields: [userId], references: [id])
  products  BillProduct[]
  total     Float
  createdAt DateTime    @default(now())
}

model BillProduct {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  billId    String @db.ObjectId
  productId String @db.ObjectId
  bill      Bill    @relation(fields: [billId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
  quantity  Int
}

model Category {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  parentId  String?    @db.ObjectId
  parent    Category?  @relation("Subcategories", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  children  Category[] @relation("Subcategories")
  items     Item[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Item {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  price       Float
  tax         Float?
  discount    Float?
  stock       Int?
  variants    Json?
  categoryId  String   @db.ObjectId
  category    Category @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  imageUrl    String?  @map("image")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

// ===================== DYNAMIC FORM MODELS =====================

model Form {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  fields    Field[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Field {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  formId    String      @db.ObjectId
  form      Form        @relation(fields: [formId], references: [id])
  label     String
  type      FieldType
  required  Boolean     @default(false)
  options   String[]
  value     String?
  values    String[]
  fileUrl   String?
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

enum FieldType {
  INPUT
  SELECT
  CHECKBOX
  RADIO
  FILE
}